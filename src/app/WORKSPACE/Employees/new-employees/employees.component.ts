import { Component, OnInit } from '@angular/core';
import { AlertService } from 'src/app/services/alert/alert.service';
import { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';
import { myHTTPService } from 'src/app/services/HTTP/myhttp.service';

@Component({
  selector: 'app-employees',
  templateUrl: './employees.component.html',
  styleUrls: ['./employees.component.styl']
})
export class EmployeesComponent implements OnInit {

  EmployeeControl: FormGroup;
  areasList: string[] = [
  '–í–∞—Ö–∏—Ç–æ–≤—Å–∫–∏–π',
  '–ê–≤–∏–∞—Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π',
  '–ö–∏—Ä–æ–≤—Å–∫–∏–π',
  '–ú–æ—Å–∫–æ–≤—Å–∫–∏–π',
  '–ù–æ–≤–æ-–°–∞–≤–∏–Ω–æ–≤—Å–∫–∏–π',
  '–ü—Ä–∏–≤–æ–ª–∂—Å–∫–∏–π',
  '–°–æ–≤–µ—Ç—Å–∫–∏–π',
  '–†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –≤–∞—Ö—Ç–æ–≤—ã–π –º–µ—Ç–æ–¥'
  ]
  constructor(
    private alert: AlertService,
    private fb: FormBuilder,
    private myHttp: myHTTPService,
  ) { }

  ngOnInit() {
    this.EmployeeControl = this.fb.group({
      details: this.fb.group({
        fullName: ['', Validators.required],
        birthDate: ['', Validators.required],
        contactPhone: this.fb.array([
          ['', Validators.required]
        ]),
        homeAddress: ['', Validators.required],
        workAdresses: new FormControl(),
        workHistory: ['', Validators.required],
        workGrah: ['', Validators.required]
      }),
      creatingDate: new Date,
    });
  }

  saveEmployee(): void {
    if (this.EmployeeControl.valid) {
      this.myHttp.postHTTP('/crm/users/createNewEmployee', this.EmployeeControl.value)
        .subscribe( (data: any) => {
          this.alert.openSnackBar( data.message );
          this.EmployeeControl.reset();
        }, ( err: any ) => {
          this.alert.openSnackBar( err );
        })
    } else {
      this.alert.openSnackBar('ü§¶‚Äç –ó–∞–ø–æ–ª–Ω–µ–Ω—ã –Ω–µ –≤—Å–µ –ø–æ–ª—è!');
    }
  }

}
